name: Deploy to Kubernetes
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./my-ipa-app
        push: true
        tags: peachflavor/my-ipa-app:latest

    # Create a kind cluster
    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1.5.0
      with:
        cluster_name: kind
        wait: 120s

    # Install Nginx Ingress Controller
    - name: Install Nginx Ingress Controller
      run: |
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.2/deploy/static/provider/cloud/deploy.yaml
        # Wait for nginx ingress controller to be ready
        kubectl wait --namespace ingress-nginx \
          --for=condition=ready pod \
          --selector=app.kubernetes.io/component=controller \
          --timeout=90s

    - name: Set up Helm
      uses: azure/setup-helm@v1
      with:
        version: 'v3.12.3'

    - name: Deploy to Kubernetes
      run: |
        helm upgrade --install my-ipa-app ./my-ipa-app-chart \
          --namespace default \
          --wait \
          --timeout 5m

    # Test 1: Port Forward
    - name: Test Service (Port Forward)
      run: |
        # Start port forwarding in the background
        kubectl port-forward svc/my-ipa-app 8080:80 &
        # Wait for port forwarding to be ready
        sleep 5
        # Test the connection
        curl http://localhost:8080
        # Show the response in the logs
        echo "Response from service:"
        curl -s http://localhost:8080

    # Test 2: Ingress
    - name: Test Ingress
      run: |
        # Get Ingress IP
        INGRESS_IP=$(kubectl get ingress my-ipa-app-ingress -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        echo "Ingress IP: $INGRESS_IP"
        # Add hostname to /etc/hosts
        echo "127.0.0.1 localhost" | sudo tee -a /etc/hosts
        # Test the connection through ingress
        curl -H "Host: localhost" http://localhost

    # Test 3: kubectl exec
    - name: Test Pod Directly
      run: |
        # Get the pod name
        POD_NAME=$(kubectl get pods -l app=my-ipa-app -o jsonpath='{.items[0].metadata.name}')
        # Test nginx inside the pod
        kubectl exec $POD_NAME -- curl -s http://localhost:80

    # Optional: Show logs for debugging
    - name: Show Pod and Service Status
      if: always()
      run: |
        echo "Pod Status:"
        kubectl get pods -o wide
        echo "\nService Status:"
        kubectl get svc
        echo "\nIngress Status:"
        kubectl get ingress
        echo "\nPod Logs:"
        kubectl logs -l app=my-ipa-app
